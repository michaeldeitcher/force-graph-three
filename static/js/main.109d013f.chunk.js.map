{"version":3,"sources":["simpleStore.js","Components/Menu.js","Components/PinNodeToggle.js","Components/App.js","graph.js","MainScene.js","Camera.js","serviceWorker.js","index.js"],"names":["simpleStore","Menu","reloadPage","window","location","reload","M","AutoInit","className","id","class","onClick","this","href","data-target","Component","PinNodeToggle","props","state","checked","pinNodeEnabled","handleChange","bind","event","target","setState","type","onChange","App","idIndex","GraphNode","depth","x","Math","random","y","pos","THREE","pinned","collapsed","enabled","parent","edges","other","push","includes","everyNode","graph","callback","springLength","springStrength","repulsionStrength","forceDirected","ignore","i","length","node","j","apart","copy","sub","distance","distanceTo","max","forceSize","hasEdge","normalize","multiplyScalar","add","scene","camera","renderer","circles","Camera","innerWidth","innerHeight","position","z","controls","OrbitControls","domElement","addEventListener","aspect","updateProjectionMatrix","setSize","update","render","addToScene","mesh","geometry","color","addCircle","removeFromScene","removeCircle","remove","updatePosition","circle","material","filter","item","toggleChildren","everyChild","checkForCollapsed","lines","lineMaterial","addLineToScene","vertices","line","removeLinesFromScene","pop","dispose","mouseFromEvent","mouse","clientX","clientY","raycaster","everyRaycastIntersect","setFromCamera","intersect","intersectObjects","children","object","point","mouseMove","plane","alphaTest","visible","dragging","onMouseDown","lookAt","onMouseUp","onMouseMove","intersectObject","document","changedTouches","lastHoveredNode","animate","requestAnimationFrame","hoverCircle","addHoverCircle","everyEdge","init","treeGraph","branches","subGraph","connect","concat","getElementsByTagName","setAttribute","body","appendChild","Boolean","hostname","match","ReactDOM","getElementById","MainScene","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.109d013f.chunk.js","sourcesContent":["let simpleStore;\n\nsimpleStore = simpleStore || {};\n\nexport default simpleStore;","import React, {Component} from 'react';\nimport M from \"materialize-css\";\nimport './Menu.css';\n\nclass Menu extends Component {\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n  }\n\n  reloadPage = () => window.location.reload()\n\n  render() {\n    return (\n    <div className=\"Menu\">\n      <ul id=\"slide-out\" class=\"sidenav\">\n        <li><a onClick={this.reloadPage}>Reload Page</a></li>\n        <li class=\"no-padding\">\n        </li>\n      </ul>\n      <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>      \n    </div>\n    )}\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './PinNodeToggle.css'\n\nclass PinNodeToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {checked: simpleStore.pinNodeEnabled || false};\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        simpleStore.pinNodeEnabled = event.target.checked;\n        this.setState({checked: event.target.checked});\n    }\n\n    render() {\n        return (\n            <div class=\"switch\">\n                <label>\n                    Off\n                    <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                    <span class=\"lever\"></span>\n                    On\n                </label>\n            </div>        \n        )\n    };\n}\n\nexport default PinNodeToggle;","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.css';\nimport Menu from './Menu'\nimport PinNodeToggle from './PinNodeToggle'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <PinNodeToggle/>\n    </div>\n  );\n}\n\nexport default App;\n","import * as THREE from 'three';\n\nvar idIndex = 0;\n\nclass GraphNode {\n    constructor(depth) {\n      const x = 100 - Math.random() * 200;\n      const y = 10 * Math.random() * (4 - depth);\n      const z = 1;//10 * Math.random() * -4;\n      this.pos = new THREE.Vector3( x, y, z ); \n      this.id = idIndex;\n      this.pinned = false;\n      this.collapsed = false;\n      this.enabled = true;\n      this.parent = null;\n      idIndex += 1;\n      \n      if(idIndex == 0)\n        this.pos = new THREE.Vector3( 0,0,0 ); \n\n      this.edges = [];\n    }\n    connect(other) {\n      this.edges.push(other);\n      other.edges.push(this);\n    }\n    hasEdge(other) {\n      return this.edges.includes(other);\n    }\n    toggle() {\n      this.enabled = !this.enabled;\n    }\n  }\n\n  function treeGraph(depth, branches) {\n    let graph = [ new GraphNode(depth)];\n    if (depth > 1) {\n      for( let i = 0; i < branches; i++ ){\n        let subGraph = treeGraph(depth - 1, branches);\n        graph[0].connect(subGraph[0]);\n        subGraph[0].parent = graph[0];\n        graph = graph.concat(subGraph);\n      }\n    }\n    return graph;\n  }\n\n  function everyChild( graph, callback ) {\n    for(let node of graph.edges) {\n      if( node !== graph.parent) {\n        everyChild(node, callback);\n        callback(node);\n      }\n    }\n  }\n  \n  function everyNode(graph, callback ) {\n    for (let node of graph ) {\n      callback(node);\n    }\n  }\n\n  const springLength =  10;\n  const springStrength = 20;\n  const repulsionStrength = 40000;\n  \n  function forceDirected(graph, {ignore}) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      if(!node.enabled) continue;\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if(!other.enabled) continue;\n        let apart = new THREE.Vector3().copy(other.pos);\n        apart.sub(node.pos);\n        var distance = other.pos.distanceTo(node.pos);\n        distance = Math.max(1, distance);\n        let forceSize = -repulsionStrength / (distance * distance);\n        if( node.hasEdge(other) ) {\n          forceSize += (distance - springLength * springStrength);\n        }\n        apart.normalize();\n        apart.multiplyScalar(forceSize/100);        \n        if(node !== ignore && !node.pinned) node.pos.add(apart);\n        if(other !== ignore && !other.pinned) other.pos.sub(apart);      \n      }\n    }\n  }\n  \n  function everyEdge(graph, callback) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if( node.hasEdge(other) ) {\n          callback(node, other);\n        }\n      }\n    }\n  }\n\n  export { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild }","import * as THREE from 'three';\nimport { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild } from './graph.js'\nimport Camera from './Camera'\nimport { inherits } from 'util';\nimport simpleStore from './simpleStore';\n\n\nlet graph, scene, camera, renderer, controls, circles;\nfunction init() {\n  graph = treeGraph(4,4);\n\n  scene = new THREE.Scene();\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"margin: 0;\");\n  renderer.domElement.setAttribute(\"style\", \"position: absolute; top: 0; left: 0;\");\n  document.body.appendChild( renderer.domElement );\n  camera = new Camera({renderer,scene});\n\n  circles = [];\n  everyNode(graph, addToScene);\n  animate();\n}\n\nlet addToScene = node => {\n  let randomMaterial = () => {\n    return new THREE.MeshBasicMaterial( { color: new THREE.Color(Math.random(), Math.random(), Math.random()) } );\n  }\n\n  if(node.mesh) return;\n  const geometry = new THREE.SphereGeometry( 30 );\n  let mesh = new THREE.Mesh( geometry, randomMaterial() );\n  mesh.position.x =  node.pos.x;\n  mesh.position.y =  node.pos.y;\n  mesh.position.z =  node.pos.z;\n  node.mesh = mesh;\n  mesh.node = node;\n  scene.add(mesh);\n  if(node.collapsed) addCircle(node);\n}\n\nlet removeFromScene = node => {\n  removeCircle(node);\n  scene.remove(node.mesh);\n  node.mesh = null;  \n}\n\nlet updatePosition = node => {\n  if(!node.enabled) return;\n  node.mesh.position.x = node.pos.x;\n  node.mesh.position.y = node.pos.y;\n  node.mesh.position.z = node.pos.z;\n  if(node.circle) {\n    node.circle.position.copy(node.mesh.position);\n  }\n}\n\nlet addCircle = graph => {\n  let geometry = new THREE.CircleGeometry( 43, 32 );\n  let material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.circle = circle;\n  scene.add( circle );\n  circles.push(circle);\n} \n\nlet removeCircle = graph => {\n  if(!graph.circle) return;\n  scene.remove(graph.circle);\n  circles = circles.filter( (item) => item != graph.circle );\n  graph.circle = null;  \n}\n\nlet hoverCircle;\nlet geometry = new THREE.CircleGeometry( 45, 32 );\nlet material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\nfunction addHoverCircle( graph ) {\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.hoverCircle = circle;\n  scene.add( circle );\n  circles.push(circle);\n}\n\nfunction removeHoverCircle(graph){\n  if(!graph.hoverCircle) return;\n  scene.remove(graph.hoverCircle);\n  circles = circles.filter( (item) => item != graph.hoverCircle );\n  graph.hoverCircle = null;  \n}\n\nfunction toggleChildren( graph ) {\n  graph.collapsed = !graph.collapsed;\n  if(graph.collapsed) \n    addCircle(graph);\n  else\n    removeCircle(graph);\n  let checkForCollapsed = (parent) => {\n    if(parent.collapsed) return true;\n    if(parent.parent) return checkForCollapsed(parent.parent);\n    return false;\n  }\n\n  everyChild(graph, (node) => {\n    node.enabled = !checkForCollapsed(node.parent);\n    if(node.enabled)\n      addToScene(node);\n    else\n      removeFromScene(node);\n  });\n}\n\nlet lines = [];\nlet lineMaterial = new THREE.LineBasicMaterial( { color: 0x0000ff } );\nlet addLineToScene = (node, other) => {\n  if(!node.enabled || !other.enabled)\n    return;\n  let geometry = new THREE.Geometry();\n  geometry.vertices.push(node.pos);\n  geometry.vertices.push(other.pos);\n  let line = new THREE.Line( geometry, lineMaterial );\n  scene.add(line);  \n  lines.push(line);\n}\nlet removeLinesFromScene = () => {    \n  while( lines.length ) {\n      let line = lines.pop();        \n      scene.remove(line);\n      line.geometry.dispose();\n  } \n}\n\nfunction mouseFromEvent( event ) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = new THREE.Vector2();\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    return mouse;\n}\n\nlet raycaster = new THREE.Raycaster();\nfunction everyRaycastIntersect( mouse, callback ) {\n  raycaster.setFromCamera( mouse, camera.camera );\n\n  let intersects = raycaster.intersectObjects( scene.children );\n  let intersect = intersects.filter(item => item.object.node != null )[0];\n  if(intersect) callback(intersect.object.node, intersect.point);\n}\n\nlet onMouseDblClick = event => {\n    let mouse = mouseFromEvent( event );\n    everyRaycastIntersect( mouse, toggleChildren );\n}\n\n// window.addEventListener( 'mousemove', onMouseMove, false );\nlet plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(5000, 5000, 8, 8), \n   new THREE.MeshBasicMaterial( {\n       color: 0x248f24, alphaTest: 0, visible: false\n}));\nlet dragging = null;\nfunction onMouseDown( event ) {\n  let mouse = mouseFromEvent( event );\n  camera.controls.enabled = true;\n  everyRaycastIntersect(mouse, (node, position) => {\n    plane.position.copy(position);\n    plane.lookAt(camera.position);  \n    dragging = node;\n    camera.controls.enabled = false;\n  });\n}\nfunction onMouseUp( event ) {\n  if(dragging){\n    dragging = null;\n  }\n}\nlet mouseMove;\nfunction onMouseMove( event ) {\n  let mouse = mouseFromEvent( event );\n  mouseMove = mouse;  \n  if(dragging) {\n    raycaster.setFromCamera( mouse, camera.camera );\n    let intersect = raycaster.intersectObject( plane )[0];  \n    if(intersect){\n      dragging.pos.copy(intersect.point);\n      dragging.pinned = simpleStore.pinNodeEnabled;\n    }\n  }\n}\n\ndocument.addEventListener( 'mousedown', onMouseDown, false );\ndocument.addEventListener( 'mousemove', onMouseMove, false );\ndocument.addEventListener( 'mouseup', onMouseUp, false );\n\ndocument.addEventListener( 'dblclick', onMouseDblClick, false );\n\ndocument.addEventListener( 'touchstart', event => onMouseDown(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchmove', event => onMouseMove(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchend', event => onMouseUp(event.changedTouches[0]), false ); \n\nlet lastHoveredNode = null;\nfunction animate() {\n  requestAnimationFrame( animate );\n\n  if(mouseMove) {\n    if(lastHoveredNode) removeHoverCircle(lastHoveredNode);\n    everyRaycastIntersect(mouseMove, graph => {\n      addHoverCircle(graph);\n      lastHoveredNode = graph;\n    } );\n  }\n\n  for(let i=0; i < 20; i++)\n    forceDirected(graph, {ignore: dragging});\n  removeLinesFromScene();\n  everyNode(graph, updatePosition);                \n  everyEdge(graph, addLineToScene);\n  for(let circle of circles) {\n    circle.lookAt(camera.position);\n  }\n  camera.update();\n}\n\nexport default init","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass Camera {\n    constructor({renderer, scene}) {\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 500;\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );  \n        \n        let onResize = () => {\n            this.camera.aspect = window.innerWidth / window.innerHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n          \n        window.addEventListener( 'resize', onResize, false );         \n    }\n\n    get position() {return this.camera.position;}\n    update() {\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nexport default Camera","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport MainScene from './MainScene';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nMainScene();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}