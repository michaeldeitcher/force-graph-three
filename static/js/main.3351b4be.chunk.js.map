{"version":3,"sources":["simpleStore.js","Components/Menu.js","Components/PinNodeToggle.js","Components/App.js","graph.js","MainScene.js","Camera.js","serviceWorker.js","index.js"],"names":["simpleStore","Menu","reloadPage","window","location","reload","M","AutoInit","className","id","class","onClick","this","href","data-target","Component","PinNodeToggle","props","state","checked","pinNodeEnabled","handleChange","bind","event","target","setState","type","onChange","App","idIndex","GraphNode","depth","x","Math","random","y","pos","THREE","pinned","collapsed","enabled","parent","edges","other","push","includes","everyNode","graph","callback","springLength","springStrength","repulsionStrength","scene","camera","renderer","circles","Camera","innerWidth","innerHeight","position","z","controls","OrbitControls","domElement","minPolarAngle","PI","maxPolarAngle","addEventListener","aspect","updateProjectionMatrix","setSize","update","render","addToScene","node","mesh","geometry","color","add","addCircle","removeFromScene","removeCircle","remove","updatePosition","circle","copy","material","filter","item","toggleChildren","everyChild","checkForCollapsed","lines","lineMaterial","addLineToScene","vertices","line","removeLinesFromScene","length","pop","dispose","mouseFromEvent","mouse","clientX","clientY","raycaster","everyRaycastIntersect","setFromCamera","intersect","intersectObjects","children","object","point","mouseMove","plane","alphaTest","visible","dragging","onMouseDown","lookAt","onMouseUp","onMouseMove","intersectObject","document","changedTouches","lastHoveredNode","animate","requestAnimationFrame","hoverCircle","addHoverCircle","ignore","i","j","apart","sub","distance","distanceTo","max","forceSize","hasEdge","normalize","multiplyScalar","forceDirected","everyEdge","init","treeGraph","branches","subGraph","connect","concat","getElementsByTagName","setAttribute","body","appendChild","Boolean","hostname","match","ReactDOM","getElementById","MainScene","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3351b4be.chunk.js","sourcesContent":["let simpleStore;\n\nsimpleStore = simpleStore || {};\n\nexport default simpleStore;","import React, {Component} from 'react';\nimport M from \"materialize-css\";\nimport './Menu.css';\n\nclass Menu extends Component {\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n  }\n\n  reloadPage = () => window.location.reload()\n\n  render() {\n    return (\n    <div className=\"Menu\">\n      <ul id=\"slide-out\" class=\"sidenav\">\n        <li><a onClick={this.reloadPage}>Reload Page</a></li>\n        <li class=\"no-padding\">\n        </li>\n      </ul>\n      <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>      \n    </div>\n    )}\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './PinNodeToggle.css'\n\nclass PinNodeToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {checked: simpleStore.pinNodeEnabled || false};\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        simpleStore.pinNodeEnabled = event.target.checked;\n        this.setState({checked: event.target.checked});\n    }\n\n    render() {\n        return (\n            <div class=\"switch\">\n                <label>\n                    Off\n                    <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                    <span class=\"lever\"></span>\n                    On\n                </label>\n            </div>        \n        )\n    };\n}\n\nexport default PinNodeToggle;","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.css';\nimport Menu from './Menu'\nimport PinNodeToggle from './PinNodeToggle'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <PinNodeToggle/>\n    </div>\n  );\n}\n\nexport default App;\n","import * as THREE from 'three';\n\nvar idIndex = 0;\n\nclass GraphNode {\n    constructor(depth) {\n      const x = 100 - Math.random() * 200;\n      const y = 10 * Math.random() * (4 - depth);\n      const z = 1;//10 * Math.random() * -4;\n      this.pos = new THREE.Vector3( x, y, z ); \n      this.id = idIndex;\n      this.pinned = false;\n      this.collapsed = false;\n      this.enabled = true;\n      this.parent = null;\n      idIndex += 1;\n      \n      if(idIndex == 0)\n        this.pos = new THREE.Vector3( 0,0,0 ); \n\n      this.edges = [];\n    }\n    connect(other) {\n      this.edges.push(other);\n      other.edges.push(this);\n    }\n    hasEdge(other) {\n      return this.edges.includes(other);\n    }\n    toggle() {\n      this.enabled = !this.enabled;\n    }\n  }\n\n  function treeGraph(depth, branches) {\n    let graph = [ new GraphNode(depth)];\n    if (depth > 1) {\n      for( let i = 0; i < branches; i++ ){\n        let subGraph = treeGraph(depth - 1, branches);\n        graph[0].connect(subGraph[0]);\n        subGraph[0].parent = graph[0];\n        graph = graph.concat(subGraph);\n      }\n    }\n    return graph;\n  }\n\n  function everyChild( graph, callback ) {\n    for(let node of graph.edges) {\n      if( node !== graph.parent) {\n        everyChild(node, callback);\n        callback(node);\n      }\n    }\n  }\n  \n  function everyNode(graph, callback ) {\n    for (let node of graph ) {\n      callback(node);\n    }\n  }\n\n  const springLength =  10;\n  const springStrength = 20;\n  const repulsionStrength = 40000;\n  \n  function forceDirected(graph, {ignore}) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      if(!node.enabled) continue;\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if(!other.enabled) continue;\n        let apart = new THREE.Vector3().copy(other.pos);\n        apart.sub(node.pos);\n        var distance = other.pos.distanceTo(node.pos);\n        distance = Math.max(1, distance);\n        let forceSize = -repulsionStrength / (distance * distance);\n        if( node.hasEdge(other) ) {\n          forceSize += (distance - springLength * springStrength);\n        }\n        apart.normalize();\n        apart.multiplyScalar(forceSize/2);        \n        if(node !== ignore && !node.pinned) node.pos.add(apart);\n        if(other !== ignore && !other.pinned) other.pos.sub(apart);      \n      }\n    }\n  }\n  \n  function everyEdge(graph, callback) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if( node.hasEdge(other) ) {\n          callback(node, other);\n        }\n      }\n    }\n  }\n\n  export { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild }","import * as THREE from 'three';\nimport { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild } from './graph.js'\nimport Camera from './Camera'\nimport { inherits } from 'util';\nimport simpleStore from './simpleStore';\n\n\nlet graph, scene, camera, renderer, controls, circles;\nfunction init() {\n  graph = treeGraph(4,4);\n\n  scene = new THREE.Scene();\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"margin: 0;\");\n  renderer.domElement.setAttribute(\"style\", \"position: absolute; top: 0; left: 0;\");\n  document.body.appendChild( renderer.domElement );\n  camera = new Camera({renderer,scene});\n\n  circles = [];\n  everyNode(graph, addToScene);\n  animate();\n}\n\nlet addToScene = node => {\n  let randomMaterial = () => {\n    return new THREE.MeshBasicMaterial( { color: new THREE.Color(Math.random(), Math.random(), Math.random()) } );\n  }\n\n  if(node.mesh) return;\n  const geometry = new THREE.SphereGeometry( 30 );\n  let mesh = new THREE.Mesh( geometry, randomMaterial() );\n  mesh.position.x =  node.pos.x;\n  mesh.position.y =  node.pos.y;\n  mesh.position.z =  node.pos.z;\n  node.mesh = mesh;\n  mesh.node = node;\n  scene.add(mesh);\n  if(node.collapsed) addCircle(node);\n}\n\nlet removeFromScene = node => {\n  removeCircle(node);\n  scene.remove(node.mesh);\n  node.mesh = null;  \n}\n\nlet updatePosition = node => {\n  if(!node.enabled) return;\n  node.mesh.position.x = node.pos.x;\n  node.mesh.position.y = node.pos.y;\n  node.mesh.position.z = node.pos.z;\n  if(node.circle) {\n    node.circle.position.copy(node.mesh.position);\n  }\n}\n\nlet addCircle = graph => {\n  let geometry = new THREE.CircleGeometry( 43, 32 );\n  let material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.circle = circle;\n  scene.add( circle );\n  circles.push(circle);\n} \n\nlet removeCircle = graph => {\n  if(!graph.circle) return;\n  scene.remove(graph.circle);\n  circles = circles.filter( (item) => item != graph.circle );\n  graph.circle = null;  \n}\n\nlet hoverCircle;\nlet geometry = new THREE.CircleGeometry( 45, 32 );\nlet material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\nfunction addHoverCircle( graph ) {\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.hoverCircle = circle;\n  scene.add( circle );\n  circles.push(circle);\n}\n\nfunction removeHoverCircle(graph){\n  if(!graph.hoverCircle) return;\n  scene.remove(graph.hoverCircle);\n  circles = circles.filter( (item) => item != graph.hoverCircle );\n  graph.hoverCircle = null;  \n}\n\nfunction toggleChildren( graph ) {\n  graph.collapsed = !graph.collapsed;\n  if(graph.collapsed) \n    addCircle(graph);\n  else\n    removeCircle(graph);\n  let checkForCollapsed = (parent) => {\n    if(parent.collapsed) return true;\n    if(parent.parent) return checkForCollapsed(parent.parent);\n    return false;\n  }\n\n  everyChild(graph, (node) => {\n    node.enabled = !checkForCollapsed(node.parent);\n    if(node.enabled)\n      addToScene(node);\n    else\n      removeFromScene(node);\n  });\n}\n\nlet lines = [];\nlet lineMaterial = new THREE.LineBasicMaterial( { color: 0x0000ff } );\nlet addLineToScene = (node, other) => {\n  if(!node.enabled || !other.enabled)\n    return;\n  let geometry = new THREE.Geometry();\n  geometry.vertices.push(node.pos);\n  geometry.vertices.push(other.pos);\n  let line = new THREE.Line( geometry, lineMaterial );\n  scene.add(line);  \n  lines.push(line);\n}\nlet removeLinesFromScene = () => {    \n  while( lines.length ) {\n      let line = lines.pop();        \n      scene.remove(line);\n      line.geometry.dispose();\n  } \n}\n\nfunction mouseFromEvent( event ) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = new THREE.Vector2();\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    return mouse;\n}\n\nlet raycaster = new THREE.Raycaster();\nfunction everyRaycastIntersect( mouse, callback ) {\n  raycaster.setFromCamera( mouse, camera.camera );\n\n  let intersects = raycaster.intersectObjects( scene.children );\n  let intersect = intersects.filter(item => item.object.node != null )[0];\n  if(intersect) callback(intersect.object.node, intersect.point);\n}\n\nlet onMouseDblClick = event => {\n    let mouse = mouseFromEvent( event );\n    everyRaycastIntersect( mouse, toggleChildren );\n}\n\n// window.addEventListener( 'mousemove', onMouseMove, false );\nlet plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(5000, 5000, 8, 8), \n   new THREE.MeshBasicMaterial( {\n       color: 0x248f24, alphaTest: 0, visible: false\n}));\nlet dragging = null;\nfunction onMouseDown( event ) {\n  let mouse = mouseFromEvent( event );\n  camera.controls.enabled = true;\n  everyRaycastIntersect(mouse, (node, position) => {\n    plane.position.copy(position);\n    plane.lookAt(camera.position);  \n    dragging = node;\n    camera.controls.enabled = false;\n  });\n}\nfunction onMouseUp( event ) {\n  if(dragging){\n    dragging = null;\n  }\n}\nlet mouseMove;\nfunction onMouseMove( event ) {\n  let mouse = mouseFromEvent( event );\n  mouseMove = mouse;  \n  if(dragging) {\n    raycaster.setFromCamera( mouse, camera.camera );\n    let intersect = raycaster.intersectObject( plane )[0];  \n    if(intersect){\n      dragging.pos.copy(intersect.point);\n      dragging.pinned = simpleStore.pinNodeEnabled;\n    }\n  }\n}\n\ndocument.addEventListener( 'mousedown', onMouseDown, false );\ndocument.addEventListener( 'mousemove', onMouseMove, false );\ndocument.addEventListener( 'mouseup', onMouseUp, false );\n\ndocument.addEventListener( 'dblclick', onMouseDblClick, false );\n\ndocument.addEventListener( 'touchstart', event => onMouseDown(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchmove', event => onMouseMove(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchend', event => onMouseUp(event.changedTouches[0]), false ); \n\nlet lastHoveredNode = null;\nfunction animate() {\n  requestAnimationFrame( animate );\n\n  if(mouseMove) {\n    if(lastHoveredNode) removeHoverCircle(lastHoveredNode);\n    everyRaycastIntersect(mouseMove, graph => {\n      addHoverCircle(graph);\n      lastHoveredNode = graph;\n    } );\n  }\n\n  forceDirected(graph, {ignore: dragging});\n  removeLinesFromScene();\n  everyNode(graph, updatePosition);                \n  everyEdge(graph, addLineToScene);\n  for(let circle of circles) {\n    circle.lookAt(camera.position);\n  }\n  camera.update();\n}\n\nexport default init","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass Camera {\n    constructor({renderer, scene}) {\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 500;\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );  \n        this.controls.minPolarAngle = Math.PI / 2;\n        this.controls.maxPolarAngle = Math.PI / 2;\n        \n        let onResize = () => {\n            this.camera.aspect = window.innerWidth / window.innerHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n          \n        window.addEventListener( 'resize', onResize, false );         \n    }\n\n    get position() {return this.camera.position;}\n    update() {\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nexport default Camera","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport MainScene from './MainScene';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nMainScene();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}