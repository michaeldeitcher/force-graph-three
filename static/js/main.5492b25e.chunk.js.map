{"version":3,"sources":["App.js","graph.js","MainScene.js","serviceWorker.js","index.js","logo.svg"],"names":["App","className","src","logo","alt","href","target","rel","idIndex","GraphNode","depth","x","Math","random","y","this","pos","THREE","id","collapsed","enabled","parent","edges","other","push","includes","everyNode","graph","callback","springLength","springStrength","repulsionStrength","forceDirected","ignore","i","length","node","j","apart","copy","sub","distance","distanceTo","max","forceSize","hasEdge","normalize","multiplyScalar","add","scene","camera","renderer","controls","circles","addToScene","mesh","geometry","color","position","z","addCircle","removeFromScene","removeCircle","remove","updatePosition","circle","material","filter","item","toggleChildren","everyChild","checkForCollapsed","lines","lineMaterial","addLineToScene","vertices","line","removeLinesFromScene","pop","dispose","mouseFromEvent","event","mouse","clientX","window","innerWidth","clientY","innerHeight","raycaster","everyRaycastIntersect","setFromCamera","intersect","intersectObjects","children","object","point","mouseMove","plane","alphaTest","visible","dragging","onMouseDown","lookAt","onMouseUp","onMouseMove","intersectObject","document","addEventListener","changedTouches","aspect","updateProjectionMatrix","setSize","lastHoveredNode","animate","requestAnimationFrame","hoverCircle","addHoverCircle","everyEdge","update","render","init","treeGraph","branches","subGraph","connect","concat","getElementsByTagName","setAttribute","domElement","body","appendChild","OrbitControls","Boolean","location","hostname","match","ReactDOM","getElementById","MainScene","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5492b25e.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import * as THREE from 'three';\n\nvar idIndex = 0;\n\nclass GraphNode {\n    constructor(depth) {\n      const x = 100 - Math.random() * 200;\n      const y = 10 * Math.random() * (4 - depth);\n      const z = 1;//10 * Math.random() * -4;\n      this.pos = new THREE.Vector3( x, y, z ); \n      this.id = idIndex;\n      this.collapsed = false;\n      this.enabled = true;\n      this.parent = null;\n      idIndex += 1;\n      \n      if(idIndex == 0)\n        this.pos = new THREE.Vector3( 0,0,0 ); \n\n      this.edges = [];\n    }\n    connect(other) {\n      this.edges.push(other);\n      other.edges.push(this);\n    }\n    hasEdge(other) {\n      return this.edges.includes(other);\n    }\n    toggle() {\n      this.enabled = !this.enabled;\n    }\n  }\n\n  function treeGraph(depth, branches) {\n    let graph = [ new GraphNode(depth)];\n    if (depth > 1) {\n      for( let i = 0; i < branches; i++ ){\n        let subGraph = treeGraph(depth - 1, branches);\n        graph[0].connect(subGraph[0]);\n        subGraph[0].parent = graph[0];\n        graph = graph.concat(subGraph);\n      }\n    }\n    return graph;\n  }\n\n  function everyChild( graph, callback ) {\n    for(let node of graph.edges) {\n      if( node != graph.parent) {\n        everyChild(node, callback);\n        callback(node);\n      }\n    }\n  }\n  \n  function everyNode(graph, callback ) {\n    for (let node of graph ) {\n      callback(node);\n    }\n  }\n\n  const springLength =  10;\n  const springStrength = 20;\n  const repulsionStrength = 40000;\n  \n  function forceDirected(graph, {ignore}) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      if(!node.enabled) continue;\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if(!other.enabled) continue;\n        let apart = new THREE.Vector3().copy(other.pos);\n        apart.sub(node.pos);\n        var distance = other.pos.distanceTo(node.pos);\n        distance = Math.max(1, distance);\n        let forceSize = -repulsionStrength / (distance * distance);\n        if( node.hasEdge(other) ) {\n          forceSize += (distance - springLength * springStrength);\n        }\n        apart.normalize();\n        apart.multiplyScalar(forceSize/100);        \n        if(node != ignore) node.pos.add(apart);\n        if(other != ignore) other.pos.sub(apart);      \n      }\n    }\n  }\n  \n  function everyEdge(graph, callback) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if( node.hasEdge(other) ) {\n          callback(node, other);\n        }\n      }\n    }\n  }\n\n  export { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild }","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GraphNode, treeGraph, forceDirected, everyEdge, everyNode, everyChild } from './graph.js'\nimport { inherits } from 'util';\n\n\nlet graph, scene, camera, renderer, controls, circles;\nfunction init() {\n  graph = treeGraph(4,4);\n\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"margin: 0;\");\n  renderer.domElement.setAttribute(\"style\", \"position: absolute; top: 0; left: 0;\");\n  document.body.appendChild( renderer.domElement );\n\n  controls = new OrbitControls( camera, renderer.domElement );\n  circles = [];\n\n  everyNode(graph, addToScene);\n  camera.position.z = 500;\n  animate();\n}\n\nlet addToScene = node => {\n  let randomMaterial = () => {\n    return new THREE.MeshBasicMaterial( { color: new THREE.Color(Math.random(), Math.random(), Math.random()) } );\n  }\n\n  if(node.mesh) return;\n  const geometry = new THREE.SphereGeometry( 30 );\n  let mesh = new THREE.Mesh( geometry, randomMaterial() );\n  mesh.position.x =  node.pos.x;\n  mesh.position.y =  node.pos.y;\n  mesh.position.z =  node.pos.z;\n  node.mesh = mesh;\n  mesh.node = node;\n  scene.add(mesh);\n  if(node.collapsed) addCircle(node);\n}\n\nlet removeFromScene = node => {\n  removeCircle(node);\n  scene.remove(node.mesh);\n  node.mesh = null;  \n}\n\nlet updatePosition = node => {\n  if(!node.enabled) return;\n  node.mesh.position.x = node.pos.x;\n  node.mesh.position.y = node.pos.y;\n  node.mesh.position.z = node.pos.z;\n  if(node.circle) {\n    node.circle.position.copy(node.mesh.position);\n  }\n}\n\nlet addCircle = graph => {\n  let geometry = new THREE.CircleGeometry( 43, 32 );\n  let material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.circle = circle;\n  scene.add( circle );\n  circles.push(circle);\n} \n\nlet removeCircle = graph => {\n  if(!graph.circle) return;\n  scene.remove(graph.circle);\n  circles = circles.filter( (item) => item != graph.circle );\n  graph.circle = null;  \n}\n\nlet hoverCircle;\nlet geometry = new THREE.CircleGeometry( 45, 32 );\nlet material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\nfunction addHoverCircle( graph ) {\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.hoverCircle = circle;\n  scene.add( circle );\n  circles.push(circle);\n}\n\nfunction removeHoverCircle(graph){\n  if(!graph.hoverCircle) return;\n  scene.remove(graph.hoverCircle);\n  circles = circles.filter( (item) => item != graph.hoverCircle );\n  graph.hoverCircle = null;  \n}\n\nfunction toggleChildren( graph ) {\n  graph.collapsed = !graph.collapsed;\n  if(graph.collapsed) \n    addCircle(graph);\n  else\n    removeCircle(graph);\n  let checkForCollapsed = (parent) => {\n    if(parent.collapsed) return true;\n    if(parent.parent) return checkForCollapsed(parent.parent);\n    return false;\n  }\n\n  everyChild(graph, (node) => {\n    node.enabled = !checkForCollapsed(node.parent);\n    if(node.enabled)\n      addToScene(node);\n    else\n      removeFromScene(node);\n  });\n}\n\nlet lines = [];\nlet lineMaterial = new THREE.LineBasicMaterial( { color: 0x0000ff } );\nlet addLineToScene = (node, other) => {\n  if(!node.enabled || !other.enabled)\n    return;\n  let geometry = new THREE.Geometry();\n  geometry.vertices.push(node.pos);\n  geometry.vertices.push(other.pos);\n  let line = new THREE.Line( geometry, lineMaterial );\n  scene.add(line);  \n  lines.push(line);\n}\nlet removeLinesFromScene = () => {    \n  while( lines.length ) {\n      let line = lines.pop();        \n      scene.remove(line);\n      line.geometry.dispose();\n  } \n}\n\nfunction mouseFromEvent( event ) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = new THREE.Vector2();\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    return mouse;\n}\n\nlet raycaster = new THREE.Raycaster();\nfunction everyRaycastIntersect( mouse, callback ) {\n  raycaster.setFromCamera( mouse, camera );\n\n  let intersects = raycaster.intersectObjects( scene.children );\n  let intersect = intersects.filter(item => item.object.node != null )[0];\n  if(intersect) callback(intersect.object.node, intersect.point);\n}\n\nlet onMouseDblClick = event => {\n    let mouse = mouseFromEvent( event );\n    everyRaycastIntersect( mouse, toggleChildren );\n}\n\n// window.addEventListener( 'mousemove', onMouseMove, false );\nlet plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(5000, 5000, 8, 8), \n   new THREE.MeshBasicMaterial( {\n       color: 0x248f24, alphaTest: 0, visible: false\n}));\nlet dragging = null;\nfunction onMouseDown( event ) {\n  let mouse = mouseFromEvent( event );\n  controls.enabled = true;\n  everyRaycastIntersect(mouse, (node, position) => {\n    plane.position.copy(position);\n    plane.lookAt(camera.position);  \n    dragging = node;\n    controls.enabled = false;\n  });\n}\nfunction onMouseUp( event ) {\n  if(dragging){\n    dragging = null;\n  }\n}\nlet mouseMove;\nfunction onMouseMove( event ) {\n  let mouse = mouseFromEvent( event );\n  mouseMove = mouse;  \n  if(dragging) {\n    raycaster.setFromCamera( mouse, camera );\n    let intersect = raycaster.intersectObject( plane )[0];  \n    if(intersect){\n      dragging.pos.copy(intersect.point);\n    }\n  }\n}\n\ndocument.addEventListener( 'mousedown', onMouseDown, false );\ndocument.addEventListener( 'mousemove', onMouseMove, false );\ndocument.addEventListener( 'mouseup', onMouseUp, false );\n\ndocument.addEventListener( 'dblclick', onMouseDblClick, false );\n\ndocument.addEventListener( 'touchstart', event => onMouseDown(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchmove', event => onMouseMove(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchend', event => onMouseUp(event.changedTouches[0]), false );\n\nfunction onResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nwindow.addEventListener( 'resize', onResize, false );  \n\nlet lastHoveredNode = null;\nfunction animate() {\n  requestAnimationFrame( animate );\n\n  if(mouseMove) {\n    if(lastHoveredNode) removeHoverCircle(lastHoveredNode);\n    everyRaycastIntersect(mouseMove, graph => {\n      addHoverCircle(graph);\n      lastHoveredNode = graph;\n    } );\n  }\n\n  for(let i=0; i < 20; i++)\n    forceDirected(graph, {ignore: dragging});\n  removeLinesFromScene();\n  everyNode(graph, updatePosition);                \n  everyEdge(graph, addLineToScene);\n  for(let circle of circles) {\n    circle.lookAt(camera.position);\n  }\n  controls.update();\n\n  renderer.render( scene, camera );\n}\n\nexport default init","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MainScene from './MainScene';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nMainScene();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}