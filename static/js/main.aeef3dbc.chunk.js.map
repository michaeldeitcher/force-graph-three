{"version":3,"sources":["graph.js","treeGraph.js","simpleStore.js","MainScene.js","Camera.js","skybox.js","Components/Menu.js","Components/CenterCameraButton.js","Components/PinNodeToggle.js","Components/BaseNumber.js","Components/App.js","serviceWorker.js","index.js"],"names":["idIndex","GraphNode","position","zeroCenterRandom","scaler","Math","floor","random","x","y","z","this","pos","THREE","pinned","enabled","id","edges","other","push","includes","everyNode","graph","callback","springLength","springStrength","repulsionStrength","TreeGraphNode","parent","depth","add","childIndex","collapsed","children","depthToGo","branches","destroyChildren","length","createChildNode","destroyChild","pop","forEach","child","isParent","createChildren","trashedNodes","destroy","index","indexOf","splice","childGraph","connect","addedNodes","simpleStore","scene","camera","renderer","circles","plane","Camera","window","innerWidth","innerHeight","controls","OrbitControls","domElement","target","maxDistance","addEventListener","aspect","updateProjectionMatrix","setSize","update","render","sbVertexShader","join","sbFragmentShader","skyMesh","uniforms","topColor","type","value","bottomColor","offset","exponent","skyGeo","skyMat","vertexShader","fragmentShader","side","fog","addGraph","graphIn","addToScene","changeGraph","base","power","results","concat","n","removeFromScene","node","mesh","geometry","color","copy","addCircle","removeCircle","remove","dispose","material","undefined","updatePosition","circle","filter","item","toggleChildren","everyChild","checkForCollapsed","lines","lineMaterial","addLineToScene","vertices","line","removeLinesFromScene","mouseFromEvent","event","mouse","clientX","clientY","raycaster","everyRaycastIntersect","setFromCamera","intersect","intersectObjects","object","point","mouseMove","dragging","onMouseDown","lookAt","onMouseUp","onMouseMove","intersectObject","pinNodeEnabled","document","changedTouches","lastHoveredNode","animate","requestAnimationFrame","hoverCircle","addHoverCircle","ignore","i","j","apart","sub","distance","distanceTo","max","forceSize","hasEdge","normalize","multiplyScalar","forceDirected","everyEdge","init","getElementsByTagName","setAttribute","body","appendChild","alphaTest","visible","skybox","dirLight","set","Menu","reloadPage","location","reload","M","AutoInit","className","class","onClick","href","data-target","Component","CenterCameraButton","PinNodeToggle","props","state","checked","handleChange","bind","setState","onChange","BaseNumber","handleValueChange","numberType","maxNodes","App","useState","baseNumber","setBaseNumber","powerNumber","setPowerNumber","useEffect","root","treeGraph","updateGraph","pow","Boolean","hostname","match","ReactDOM","getElementById","MainScene","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aeef3dbc.chunk.js","sourcesContent":["import * as THREE from 'three';\n\nvar idIndex = 0;\n\nclass GraphNode {\n    constructor(position) {\n      const zeroCenterRandom = (scaler) => Math.floor((.5 - Math.random()) * scaler)\n      const x = zeroCenterRandom(300);\n      const y = zeroCenterRandom(300);\n      const z = zeroCenterRandom(300);\n      if(idIndex === 0){\n        this.pos = new THREE.Vector3( 0,0,0 ); \n        this.pinned = true\n      } else {\n        this.pos = new THREE.Vector3( x, y, z ); \n        this.pinned = false;        \n      }\n\n      this.enabled = true;\n\n      this.id = idIndex;      \n      idIndex += 1;      \n      this.edges = [];\n    }\n    connect(other) {\n      this.edges.push(other);\n      other.edges.push(this);\n    }\n    hasEdge(other) {\n      return this.edges.includes(other);\n    }\n  }\n  \n  function everyNode(graph, callback ) {\n    for (let node of graph ) {\n      callback(node);\n    }\n  }\n\n  const springLength =  200;\n  const springStrength = .3;\n  const repulsionStrength = 80000;\n  \n  function forceDirected(graph, {ignore}) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      if(!node.enabled) continue;\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if(!other.enabled) continue;\n        let apart = new THREE.Vector3().copy(other.pos);\n        apart.sub(node.pos);\n        var distance = other.pos.distanceTo(node.pos);\n        distance = Math.max(1, distance);\n        let forceSize = -repulsionStrength / (distance * distance);\n        if( node.hasEdge(other) ) {\n          forceSize += (distance - springLength) * springStrength;\n        }\n        apart.normalize();\n        apart.multiplyScalar(forceSize/2);        \n        if(node !== ignore && !node.pinned) node.pos.add(apart);\n        if(other !== ignore && !other.pinned) other.pos.sub(apart);      \n      }\n    }\n  }\n  \n  function everyEdge(graph, callback) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if( node.hasEdge(other) ) {\n          callback(node, other);\n        }\n      }\n    }\n  }\n\n  export { GraphNode, forceDirected, everyEdge, everyNode }","import { GraphNode } from './graph.js'\n\nclass TreeGraphNode extends GraphNode {\n    constructor(parent){\n        super();      \n        if(parent){\n          this.depth = parent.depth + 1;\n          this.parent = parent;\n            this.pos.add(parent.pos);\n        } else {\n          this.depth = 0;\n        }\n\n        this.childIndex = 0;\n        this.collapsed = false;\n        this.parent = parent;\n        this.children = [];  \n    }\n    toggle() {\n        this.enabled = !this.enabled;\n    }  \n    createChildren(depthToGo, branches) {\n      if(depthToGo === 0)      \n        return this.destroyChildren();\n\n\n        while( branches > this.children.length ){\n            this.createChildNode(depthToGo, branches);\n        }  \n\n        while( branches < this.children.length ) {\n          this.destroyChild(this.children.pop());\n        }\n        \n        this.children.forEach( (child) => {\n            child.isParent = true;\n            child.createChildren(depthToGo-1, branches);  \n        });\n    }\n    destroy() {\n      trashedNodes.push(this);\n    }\n    destroyChild(child) {\n      child.destroyChildren();\n      child.destroy();\n      let index = this.edges.indexOf(child);\n      this.edges.splice(index,1);  \n    }\n    destroyChildren() {\n      this.children.forEach( (child) => this.destroyChild(child));\n      this.children = [];\n    }\n    createChildNode(depthToGo, branches) {\n        let childGraph = new TreeGraphNode(this);\n        this.connect(childGraph);\n        this.children.push(childGraph);\n        addedNodes.push(childGraph);\n    }  \n}\n\nlet trashedNodes = [];\nlet addedNodes = [];    \nfunction treeGraph(depth, branches) {\n  trashedNodes = [];\n  addedNodes = [];          \n  let root = new TreeGraphNode(0);\n  let graph = [root];\n  root.createChildren(depth, branches);\n  graph = graph.concat(addedNodes);\n  return graph;\n}\n\nfunction updateGraph(graph, depth, branches) {\n  trashedNodes = [];\n  addedNodes = [];      \n  let node = graph[0];\n  node.createChildren(depth, branches);  \n  graph = graph.concat(addedNodes);\n  trashedNodes.forEach(n => graph.splice(graph.indexOf(n),1));\n  return {graph, trashedNodes, addedNodes};\n}\n\nfunction everyChild( graph, callback ) {\n  for(let node of graph.children) {\n      everyChild(node, callback);\n      callback(node);\n  }\n}\n\nexport { TreeGraphNode, treeGraph, everyChild, updateGraph }","let simpleStore;\n\nsimpleStore = simpleStore || {};\n\nexport default simpleStore;","import * as THREE from 'three';\nimport { forceDirected, everyEdge, everyNode } from './graph.js'\nimport { everyChild, updateGraph } from './treeGraph.js'\nimport Camera from './Camera'\nimport { inherits } from 'util';\nimport simpleStore from './simpleStore';\nimport skybox from './skybox';\n\n\nlet graph, scene, camera, renderer, controls, circles, plane;\nfunction init() {\n  graph = null;\n\n  scene = new THREE.Scene();\n  scene.fog = new THREE.FogExp2( 0x000000, 0.00000025 );\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"margin: 0;\");\n  renderer.domElement.setAttribute(\"style\", \"position: absolute; top: 0; left: 0;\");\n  document.body.appendChild( renderer.domElement );\n  camera = new Camera({renderer,scene});\n\n  circles = [];\n\n  plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(500, 500, 8, 8), \n    new THREE.MeshBasicMaterial( {color: 0x248f24, alphaTest: 0, visible: false})\n  );\n  scene.add(plane);\n\n  scene.add(skybox());\n\n  // Add lights\n  scene.add( new THREE.AmbientLight(0x444444));\n  let dirLight = new THREE.DirectionalLight(0xffffff);\n  dirLight.position.set( - 1, 0, 1 ).normalize();\n  scene.add(dirLight);\n\n  animate();\n}\n\nlet addGraph = graphIn => {\n  graph = graphIn;\n  everyNode(graph, addToScene);\n}\n\nlet removeGraph = () => {\n  removeLinesFromScene();\n  everyNode(graph, removeFromScene);\n  graph = null;\n}\n\nlet changeGraph = (base, power) => {\n  let results = updateGraph(graph, power, base);\n  graph = results.graph;\n  while(results.addedNodes.length){\n    addToScene(results.addedNodes.pop());\n  }\n  while(results.trashedNodes.length){\n    removeFromScene(results.trashedNodes.pop());\n  }\n}\n\nlet addToScene = node => {\n  if(node.mesh) return;\n  const randomMaterial = () => new THREE.MeshPhongMaterial( { color: new THREE.Color(Math.random(), Math.random(), Math.random())} );\n  const geometry = new THREE.SphereGeometry( 30,16,12 );\n  let mesh = new THREE.Mesh( geometry, randomMaterial() );\n  mesh.position.copy(node.pos);\n  node.mesh = mesh;\n  mesh.node = node;\n  scene.add(mesh);\n  if(node.collapsed) addCircle(node);\n}\n\nlet removeFromScene = node => {\n  removeCircle(node);\n  if(!node.mesh) return;\n  scene.remove(node.mesh);\n  node.mesh.geometry.dispose();\n  node.mesh.material.dispose();\n  node.mesh = undefined;  \n}\n\nlet updatePosition = node => {\n  if(!node.enabled) return;\n  node.mesh.position.copy(node.pos);\n  if(node.circle) {\n    node.circle.position.copy(node.mesh.position);\n  }\n}\n\nlet addCircle = graph => {\n  let geometry = new THREE.CircleGeometry( 43, 32 );\n  let material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.copy(graph.pos);\n  graph.circle = circle;\n  scene.add( circle );\n  circles.push(circle);\n} \n\nlet removeCircle = graph => {\n  if(!graph.circle) return;\n  scene.remove(graph.circle);\n  graph.circle.geometry.dispose();\n  graph.circle.material.dispose();\n  circles = circles.filter( (item) => item !== graph.circle );\n  graph.circle = null;  \n}\n\nlet hoverCircle;\nlet geometry = new THREE.CircleGeometry( 45, 32 );\nlet material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\nfunction addHoverCircle( graph ) {\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.hoverCircle = circle;\n  scene.add( circle );\n  circles.push(circle);\n}\n\nfunction removeHoverCircle(graph){\n  if(!graph.hoverCircle) return;\n  scene.remove(graph.hoverCircle);\n  circles = circles.filter( (item) => item != graph.hoverCircle );\n  graph.hoverCircle = null;  \n}\n\nfunction toggleChildren( graph ) {\n  graph.collapsed = !graph.collapsed;\n  if(graph.collapsed) \n    addCircle(graph);\n  else\n    removeCircle(graph);\n  let checkForCollapsed = (parent) => {\n    if(parent.collapsed) return true;\n    if(parent.parent) return checkForCollapsed(parent.parent);\n    return false;\n  }\n\n  everyChild(graph, (node) => {\n    node.enabled = !checkForCollapsed(node.parent);\n    if(node.enabled)\n      addToScene(node);\n    else\n      removeFromScene(node);\n  });\n}\n\nlet lines = [];\nlet lineMaterial = new THREE.LineBasicMaterial( { color: 0x0000ff } );\nlet addLineToScene = (node, other) => {\n  if(!node.enabled || !other.enabled)\n    return;\n  let geometry = new THREE.Geometry();\n  geometry.vertices.push(node.pos);\n  geometry.vertices.push(other.pos);\n  let line = new THREE.Line( geometry, lineMaterial );\n  scene.add(line);  \n  lines.push(line);\n}\nlet removeLinesFromScene = () => {    \n  while( lines.length ) {\n      let line = lines.pop();        \n      scene.remove(line);\n      line.geometry.dispose();\n  } \n}\n\nfunction mouseFromEvent( event ) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = new THREE.Vector2();\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    return mouse;\n}\n\nlet raycaster = new THREE.Raycaster();\nfunction everyRaycastIntersect( mouse, callback ) {\n  raycaster.setFromCamera( mouse, camera.camera );\n\n  let intersects = raycaster.intersectObjects( scene.children );\n  let intersect = intersects.filter(item => item.object.node != null )[0];\n  if(intersect) callback(intersect.object.node, intersect.point);\n}\n\nlet onMouseDblClick = event => {\n    let mouse = mouseFromEvent( event );\n    everyRaycastIntersect( mouse, toggleChildren );\n}\n\n// window.addEventListener( 'mousemove', onMouseMove, false );\nlet dragging = null;\nlet selected = null;\nfunction onMouseDown( event ) {\n  selected = null;\n  let mouse = mouseFromEvent( event );\n  everyRaycastIntersect(mouse, (node, position) => {\n    plane.position.copy(position);\n    plane.lookAt(camera.position);  \n    dragging = node;\n    selected = node;\n    camera.controls.enabled = false;\n  });\n}\nfunction onMouseUp( event ) {\n  if(dragging){\n    dragging = null;\n    camera.controls.enabled = true;    \n  }\n}\nlet mouseMove;\nfunction onMouseMove( event ) {\n  let mouse = mouseFromEvent( event );\n  mouseMove = mouse;  \n  if(dragging) {\n    raycaster.setFromCamera( mouse, camera.camera );\n    let intersect = raycaster.intersectObject( plane )[0];  \n    if(intersect){\n      dragging.pos.copy(intersect.point);\n      plane.position.copy(intersect.point);\n      plane.lookAt(camera.position);    \n      dragging.pinned = simpleStore.pinNodeEnabled;\n    }\n  }\n}\n\ndocument.addEventListener( 'mousedown', onMouseDown, false );\ndocument.addEventListener( 'mousemove', onMouseMove, false );\ndocument.addEventListener( 'mouseup', onMouseUp, false );\n\ndocument.addEventListener( 'dblclick', onMouseDblClick, false );\n\ndocument.addEventListener( 'touchstart', event => onMouseDown(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchmove', event => onMouseMove(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchend', event => onMouseUp(event.changedTouches[0]), false ); \n\nlet lastHoveredNode = null;\nfunction animate() {\n  requestAnimationFrame( animate );\n\n  if(mouseMove) {\n    if(lastHoveredNode) {\n      removeHoverCircle(lastHoveredNode);\n      lastHoveredNode = null;\n    }\n    if(graph) {\n      everyRaycastIntersect(mouseMove, graph => {\n        addHoverCircle(graph);\n        lastHoveredNode = graph;\n      } );\n    }\n  }\n\n  if(graph) {\n    forceDirected(graph, {ignore: dragging});\n    removeLinesFromScene();\n    everyNode(graph, updatePosition);                \n    everyEdge(graph, addLineToScene);\n    for(let circle of circles) {\n      circle.lookAt(camera.position);\n    }  \n  }\n\n  camera.update();\n}\n\nexport {addGraph,removeGraph,changeGraph}\nexport default init","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass Camera {\n    constructor({renderer, scene}) {\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 1000;\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );  \n        this.controls.target = new THREE.Vector3(0, 0, 0);\n        this.controls.maxDistance = 5000;\n        \n        let onResize = () => {\n            this.camera.aspect = window.innerWidth / window.innerHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n          \n        window.addEventListener( 'resize', onResize, false );         \n    }\n\n    get position() {return this.camera.position;}\n    update() {\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nexport default Camera","import * as THREE from 'three';\n\nlet sbVertexShader = [\n    \"varying vec3 vWorldPosition;\",\n    \"void main() {\",\n    \"  vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n    \"  vWorldPosition = worldPosition.xyz;\",\n    \"  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\",\n    ].join(\"\\n\");\n\nlet sbFragmentShader = [\n    \"uniform vec3 topColor;\",\n    \"uniform vec3 bottomColor;\",\n    \"uniform float offset;\",\n    \"uniform float exponent;\",\n    \"varying vec3 vWorldPosition;\",\n    \"void main() {\",\n    \"  float h = normalize( vWorldPosition + offset ).y;\",\n    \"  gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( h, exponent ), 0.0 ) ), 1.0 );\",\n    \"}\",\n    ].join(\"\\n\");\n\nlet skyMesh = () => {\n        let iSBrsize = 5000;\n        let uniforms = {\n          topColor: {type: \"c\", value: new THREE.Color(0x0077ff)}, bottomColor: {type: \"c\", value: new THREE.Color(0xffffff)},\n          offset: {type: \"f\", value: iSBrsize}, exponent: {type: \"f\", value: 1.5}\n        }\n        let skyGeo = new THREE.SphereGeometry(iSBrsize, 32, 32);\n        let skyMat = new THREE.ShaderMaterial({vertexShader: sbVertexShader, fragmentShader: sbFragmentShader, uniforms: uniforms, side: THREE.DoubleSide, fog: false});\n        return new THREE.Mesh(skyGeo, skyMat);        \n    }\n\nexport default skyMesh;","import React, {Component} from 'react';\nimport M from \"materialize-css\";\nimport './Menu.css';\n\nclass Menu extends Component {\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n  }\n\n  reloadPage = () => window.location.reload()\n\n  render() {\n    return (\n    <div className=\"Menu\">\n      <ul id=\"slide-out\" class=\"sidenav\">\n        <li><a onClick={this.reloadPage}>Reload Page</a></li>\n        <li class=\"no-padding\">\n        </li>\n      </ul>\n      <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>      \n    </div>\n    )}\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './CenterCameraButton.css'\n\nfunction CenterCameraButton() {\n    return (\n        <div class='center-camera-button'>\n            <a class=\"btn-floating btn-large waves-effect waves-light black\"><i class=\"material-icons\">center_focus_strong</i></a>\n        </div>\n    );\n}\n\nexport default CenterCameraButton;","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './PinNodeToggle.css'\n\nclass PinNodeToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {checked: simpleStore.pinNodeEnabled || false};\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        simpleStore.pinNodeEnabled = event.target.checked;\n        this.setState({checked: event.target.checked});\n    }\n\n    render() {\n        return (\n            <div class=\"switch\">\n                <label>\n                    Off\n                    <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                    <span class=\"lever\"></span>\n                    On\n                </label>\n            </div>        \n        )\n    };\n}\n\nexport default PinNodeToggle;","import React, {useState, useEffect} from 'react';\nimport './BaseNumber.css'\n\nlet BaseNumber = ({value, handleValueChange, className, numberType}) => {\n    return (\n        <div className = {className}>        \n            <span class='number-type'>{numberType}</span>        \n            <a class=\"btn-floating btn-small\" onClick={() => handleValueChange(value - 1)}><i class=\"material-icons\">keyboard_arrow_down</i></a>\n            <span>{value}</span>\n            <a class=\"btn-floating btn-small\" onClick={() => handleValueChange(value + 1)}><i class=\"material-icons\">keyboard_arrow_up</i></a>\n        </div>\n    );\n}\n\nexport default BaseNumber;","import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.css';\nimport {addGraph,removeGraph,changeGraph} from '../MainScene';\nimport { treeGraph} from '../treeGraph.js'\nimport Menu from './Menu'\nimport CenterCameraButton from './CenterCameraButton'\nimport PinNodeToggle from './PinNodeToggle'\nimport BaseNumber from './BaseNumber'\n\nconst maxNodes = 500;\n\nfunction App() {\n  const [baseNumber, setBaseNumber] = useState(1);\n  const [powerNumber, setPowerNumber] = useState(1);\n\n  useEffect( () => {\n    addGraph(treeGraph(powerNumber,baseNumber));    \n  }, []);\n\n  const updateGraph = (base, power) => {\n    changeGraph(base,power);\n  }\n\n  const handleBaseNumber = (value) => {\n    if(Math.pow(value, powerNumber) > maxNodes){\n      setBaseNumber(baseNumber);\n      return;\n    }\n    setBaseNumber(value);\n    updateGraph(value, powerNumber);\n  }\n\n  const handlePowerNumber = (value) => {\n    if(Math.pow(baseNumber, value) > maxNodes){\n      setPowerNumber(powerNumber);\n      return;\n    }    \n    setPowerNumber(value);\n    updateGraph(baseNumber, value);\n  }  \n\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <CenterCameraButton/>\n      <PinNodeToggle/>\n      <BaseNumber numberType='Branches' className='base-number' value={baseNumber} handleValueChange={handleBaseNumber}/>\n      <BaseNumber numberType='Generations' className='power-number' value={powerNumber} handleValueChange={handlePowerNumber}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport MainScene from './MainScene';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nMainScene();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}