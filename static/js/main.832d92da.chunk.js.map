{"version":3,"sources":["graph.js","treeGraph.js","simpleStore.js","MainScene.js","Camera.js","skybox.js","Components/Menu.js","Components/HelpButton.js","Components/PinNodeToggle.js","Components/BaseNumber.js","treeGraphData.js","Components/App.js","serviceWorker.js","index.js"],"names":["idIndex","GraphNode","position","zeroCenterRandom","scaler","Math","floor","random","x","y","z","this","pos","THREE","pinned","enabled","lastEnabled","Date","getTime","id","edges","other","push","includes","everyNode","graph","callback","springLength","springStrength","repulsionStrength","TreeGraphNode","parent","depth","add","childIndex","collapsed","children","data","addedNodes","depthToGo","branches","destroyChildren","length","createChildNode","destroyChild","pop","forEach","child","isParent","createChildren","trashedNodes","destroy","index","indexOf","splice","childGraph","connect","childData","parseFloat","treeGraph","root","concat","simpleStore","scene","camera","renderer","circles","plane","Camera","window","innerWidth","innerHeight","controls","OrbitControls","domElement","target","maxDistance","addEventListener","aspect","updateProjectionMatrix","setSize","update","render","sbVertexShader","join","sbFragmentShader","skyMesh","uniforms","topColor","type","value","bottomColor","offset","exponent","skyGeo","skyMat","vertexShader","fragmentShader","side","fog","addGraph","graphIn","addToScene","changeGraph","base","power","results","n","removeFromScene","node","mesh","geometry","color","copy","addCircle","removeCircle","remove","dispose","material","undefined","updatePosition","circle","filter","item","toggleChildren","everyChild","checkForCollapsed","lines","lineMaterial","addLineToScene","vertices","line","removeLinesFromScene","mouseFromEvent","event","mouse","clientX","clientY","raycaster","everyRaycastIntersect","setFromCamera","intersect","intersectObjects","object","point","mouseMove","dragging","onMouseDown","lookAt","onMouseUp","onMouseMove","intersectObject","pinNodeEnabled","document","changedTouches","lastHoveredNode","animate","requestAnimationFrame","hoverCircle","addHoverCircle","ignore","i","j","apart","sub","distance","distanceTo","max","forceSize","hasEdge","normalize","multiplyScalar","forceDirected","everyEdge","saveGraph","generations","localStorage","setItem","JSON","stringify","init","getElementsByTagName","setAttribute","body","appendChild","alphaTest","visible","skybox","dirLight","set","Menu","reloadPage","location","reload","M","AutoInit","className","onClick","href","data-target","Component","HelpButton","class","PinNodeToggle","props","state","checked","handleChange","bind","setState","onChange","BaseNumber","handleValueChange","numberType","maxNodes","App","useState","baseNumber","setBaseNumber","powerNumber","setPowerNumber","useEffect","parse","getItem","defaultTreeData","loadData","updateGraph","handleClick","pow","Boolean","hostname","match","ReactDOM","getElementById","MainScene","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.832d92da.chunk.js","sourcesContent":["import * as THREE from 'three';\n\nvar idIndex = 0;\n\nclass GraphNode {\n    constructor(position) {\n      const zeroCenterRandom = (scaler) => Math.floor((.5 - Math.random()) * scaler)\n      const x = zeroCenterRandom(300);\n      const y = zeroCenterRandom(300);\n      const z = zeroCenterRandom(300);\n      if(idIndex === 0){\n        this.pos = new THREE.Vector3( 0,0,0 ); \n        this.pinned = true\n      } else {\n        this.pos = new THREE.Vector3( x, y, z ); \n        this.pinned = false;        \n      }\n\n      this.enabled = true;\n      this.lastEnabled = new Date().getTime();\n\n      this.id = idIndex;      \n      idIndex += 1;      \n      this.edges = [];\n    }\n    connect(other) {\n      this.edges.push(other);\n      other.edges.push(this);\n    }\n    hasEdge(other) {\n      return this.edges.includes(other);\n    }\n  }\n  \n  function everyNode(graph, callback ) {\n    for (let node of graph ) {\n      callback(node);\n    }\n  }\n\n  const springLength =  20;//200;\n  const springStrength = .3;\n  const repulsionStrength = 80000;\n  \n  function forceDirected(graph, {ignore}) {\n    if(new Date().getTime() - graph.lastEnabled > 2000) \n      return;        \n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      if(!node.enabled) continue;\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if(!other.enabled) continue;\n        let apart = new THREE.Vector3().copy(other.pos);\n        apart.sub(node.pos);\n        var distance = other.pos.distanceTo(node.pos);\n        distance = Math.max(1, distance);\n        let forceSize = -repulsionStrength / (distance * distance);\n        if( node.hasEdge(other) ) {\n          forceSize += (distance - springLength) * springStrength;\n        }\n        apart.normalize();\n        apart.multiplyScalar(forceSize/2);        \n        if(node !== ignore && !node.pinned) node.pos.add(apart);\n        if(other !== ignore && !other.pinned) other.pos.sub(apart);      \n      }\n      if(!node.pinned)node.pos.add(new THREE.Vector3(0,4,2));\n    }\n  }\n  \n  function everyEdge(graph, callback) {\n    for (let i = 0; i < graph.length; i++ ) {\n      let node = graph[i];\n      for( let j = i + 1; j < graph.length; j++ ) {\n        let other = graph[j];\n        if( node.hasEdge(other) ) {\n          callback(node, other);\n        }\n      }\n    }\n  }\n\n  export { GraphNode, forceDirected, everyEdge, everyNode }","import * as THREE from 'three';\nimport { GraphNode } from './graph.js'\n\nclass TreeGraphNode extends GraphNode {\n    constructor(parent){\n        super();      \n        if(parent){\n          this.depth = parent.depth + 1;\n          this.parent = parent;\n            this.pos.add(parent.pos);\n        } else {\n          this.depth = 0;\n        }\n\n        this.childIndex = 0;\n        this.collapsed = false;\n        this.parent = parent;\n        this.children = [];  \n    }\n\n    get data() {\n      let childData = [];\n      for( let child of this.children ){\n        childData.push(child.data);\n      }\n\n      return {\n        id: this.id, \n        pos: [this.pos.x,this.pos.y,this.pos.z], \n        pinned: this.pinned,\n        enabled: this.enabled,\n        children: childData,\n        depth: this.depth\n      }\n    }\n\n    set data(data) {\n      this.depth = data.depth;\n      this.pos = new THREE.Vector3( parseFloat(data.pos[0]), parseFloat(data.pos[1]), parseFloat(data.pos[2]) ); \n      this.pinned = data.pinned;\n      this.enabled = data.enabled;\n      for(let child of data.children) {\n        let node = this.createChildNode();\n        node.data = child;\n      }      \n    }\n\n    loadData(data) {\n      addedNodes = [];\n      this.data = data;\n      return addedNodes;\n    }\n\n    toggle() {\n        this.enabled = !this.enabled;\n    }  \n    createChildren(depthToGo, branches) {\n      if(depthToGo === 0)      \n        return this.destroyChildren();\n\n\n        while( branches > this.children.length ){\n            this.createChildNode(depthToGo, branches);\n        }  \n\n        while( branches < this.children.length ) {\n          this.destroyChild(this.children.pop());\n        }\n        \n        this.children.forEach( (child) => {\n            child.isParent = true;\n            child.createChildren(depthToGo-1, branches);  \n        });\n    }\n    destroy() {\n      trashedNodes.push(this);\n    }\n    destroyChild(child) {\n      child.destroyChildren();\n      child.destroy();\n      let index = this.edges.indexOf(child);\n      this.edges.splice(index,1);  \n    }\n    destroyChildren() {\n      this.children.forEach( (child) => this.destroyChild(child));\n      this.children = [];\n    }\n    createChildNode() {\n        let childGraph = new TreeGraphNode(this);\n        this.connect(childGraph);\n        this.children.push(childGraph);\n        addedNodes.push(childGraph);\n        return childGraph;\n    }  \n}\n\nlet trashedNodes = [];\nlet addedNodes = [];    \nfunction treeGraph(depth, branches, position) {\n  trashedNodes = [];\n  addedNodes = [];          \n  let root = new TreeGraphNode(0);\n  if(position){\n    root.pos = position;\n    root.pinned = true;\n  }\n  let graph = [root];\n  root.createChildren(depth, branches);\n  graph = graph.concat(addedNodes);\n  return graph;\n}\n\nfunction updateGraph(graph, depth, branches) {\n  trashedNodes = [];\n  addedNodes = [];      \n  let node = graph[0];\n  node.createChildren(depth, branches);  \n  graph = graph.concat(addedNodes);\n  trashedNodes.forEach(n => graph.splice(graph.indexOf(n),1));\n  return {graph, trashedNodes, addedNodes};\n}\n\nfunction everyChild( graph, callback ) {\n  for(let node of graph.children) {\n      everyChild(node, callback);\n      callback(node);\n  }\n}\n\nexport { TreeGraphNode, treeGraph, everyChild, updateGraph }","let simpleStore;\n\nsimpleStore = simpleStore || {};\n\nexport default simpleStore;","import * as THREE from 'three';\nimport { forceDirected, everyEdge, everyNode } from './graph.js'\nimport { everyChild, updateGraph } from './treeGraph.js'\nimport Camera from './Camera'\nimport simpleStore from './simpleStore';\nimport skybox from './skybox';\n\n\nlet graph, scene, camera, renderer, controls, circles, plane;\nfunction init() {\n  graph = null;\n\n  scene = new THREE.Scene();\n  scene.fog = new THREE.FogExp2( 0x000000, 0.00000025 );\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"margin: 0;\");\n  renderer.domElement.setAttribute(\"style\", \"position: absolute; top: 0; left: 0;\");\n  document.body.appendChild( renderer.domElement );\n  camera = new Camera({renderer,scene});\n\n  circles = [];\n\n  plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(500, 500, 8, 8), \n    new THREE.MeshBasicMaterial( {color: 0x248f24, alphaTest: 0, visible: false})\n  );\n  scene.add(plane);\n\n  scene.add(skybox());\n\n  // Add lights\n  scene.add( new THREE.AmbientLight(0x444444));\n  let dirLight = new THREE.DirectionalLight(0xffffff);\n  dirLight.position.set( - 1, 0, 1 ).normalize();\n  scene.add(dirLight);\n\n  animate();\n}\n\nlet addGraph = graphIn => {\n  graph = graphIn;\n  everyNode(graph, addToScene);\n}\n\nlet removeGraph = () => {\n  removeLinesFromScene();\n  everyNode(graph, removeFromScene);\n  graph = null;\n}\n\nlet changeGraph = (base, power) => {\n  let results = updateGraph(graph, power, base);\n  graph = results.graph;\n  while(results.addedNodes.length){\n    addToScene(results.addedNodes.pop());\n  }\n  while(results.trashedNodes.length){\n    removeFromScene(results.trashedNodes.pop());\n  }\n}\n\nlet addToScene = node => {\n  if(node.mesh) return;\n  const randomMaterial = () => new THREE.MeshPhongMaterial( { color: new THREE.Color(Math.random(), Math.random(), Math.random())} );\n  const geometry = new THREE.SphereGeometry( 30,16,12 );\n  let mesh = new THREE.Mesh( geometry, randomMaterial() );\n  mesh.position.copy(node.pos);\n  node.mesh = mesh;\n  mesh.node = node;\n  scene.add(mesh);\n  if(node.collapsed) addCircle(node);\n}\n\nlet removeFromScene = node => {\n  removeCircle(node);\n  if(!node.mesh) return;\n  scene.remove(node.mesh);\n  node.mesh.geometry.dispose();\n  node.mesh.material.dispose();\n  node.mesh = undefined;  \n}\n\nlet updatePosition = node => {\n  if(!node.enabled) return;\n  node.mesh.position.copy(node.pos);\n  if(node.circle) {\n    node.circle.position.copy(node.mesh.position);\n  }\n}\n\nlet addCircle = graph => {\n  let geometry = new THREE.CircleGeometry( 43, 32 );\n  let material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.copy(graph.pos);\n  graph.circle = circle;\n  scene.add( circle );\n  circles.push(circle);\n} \n\nlet removeCircle = graph => {\n  if(!graph.circle) return;\n  scene.remove(graph.circle);\n  graph.circle.geometry.dispose();\n  graph.circle.material.dispose();\n  circles = circles.filter( (item) => item !== graph.circle );\n  graph.circle = null;  \n}\n\nlet hoverCircle;\nlet geometry = new THREE.CircleGeometry( 45, 32 );\nlet material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\nfunction addHoverCircle( graph ) {\n  let circle = new THREE.Mesh( geometry, material );\n  circle.position.x = graph.pos.x;\n  circle.position.y = graph.pos.y;\n  circle.position.z = graph.pos.z;  \n  graph.hoverCircle = circle;\n  scene.add( circle );\n  circles.push(circle);\n}\n\nfunction removeHoverCircle(graph){\n  if(!graph.hoverCircle) return;\n  scene.remove(graph.hoverCircle);\n  circles = circles.filter( (item) => item != graph.hoverCircle );\n  graph.hoverCircle = null;  \n}\n\nfunction toggleChildren( graph ) {\n  graph.collapsed = !graph.collapsed;\n  if(graph.collapsed) \n    addCircle(graph);\n  else\n    removeCircle(graph);\n  let checkForCollapsed = (parent) => {\n    if(parent.collapsed) return true;\n    if(parent.parent) return checkForCollapsed(parent.parent);\n    return false;\n  }\n\n  everyChild(graph, (node) => {\n    node.enabled = !checkForCollapsed(node.parent);\n    if(node.enabled)\n      addToScene(node);\n    else\n      removeFromScene(node);\n  });\n}\n\nlet lines = [];\nlet lineMaterial = new THREE.LineBasicMaterial( { color: 0x0000ff } );\nlet addLineToScene = (node, other) => {\n  if(!node.enabled || !other.enabled)\n    return;\n  let geometry = new THREE.Geometry();\n  geometry.vertices.push(node.pos);\n  geometry.vertices.push(other.pos);\n  let line = new THREE.Line( geometry, lineMaterial );\n  scene.add(line);  \n  lines.push(line);\n}\nlet removeLinesFromScene = () => {    \n  while( lines.length ) {\n      let line = lines.pop();        \n      scene.remove(line);\n      line.geometry.dispose();\n  } \n}\n\nfunction mouseFromEvent( event ) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = new THREE.Vector2();\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    return mouse;\n}\n\nlet raycaster = new THREE.Raycaster();\nfunction everyRaycastIntersect( mouse, callback ) {\n  raycaster.setFromCamera( mouse, camera.camera );\n\n  let intersects = raycaster.intersectObjects( scene.children );\n  let intersect = intersects.filter(item => item.object.node != null )[0];\n  if(intersect) callback(intersect.object.node, intersect.point);\n}\n\nlet onMouseDblClick = event => {\n    let mouse = mouseFromEvent( event );\n    everyRaycastIntersect( mouse, toggleChildren );\n}\n\n// window.addEventListener( 'mousemove', onMouseMove, false );\nlet dragging = null;\nlet selected = null;\nfunction onMouseDown( event ) {\n  selected = null;\n  let mouse = mouseFromEvent( event );\n  everyRaycastIntersect(mouse, (node, position) => {\n    plane.position.copy(position);\n    plane.lookAt(camera.position);  \n    dragging = node;\n    selected = node;\n    camera.controls.enabled = false;\n  });\n}\nfunction onMouseUp( event ) {\n  if(dragging){\n    dragging = null;\n    camera.controls.enabled = true;    \n  }\n}\nlet mouseMove;\nfunction onMouseMove( event ) {\n  let mouse = mouseFromEvent( event );\n  mouseMove = mouse;  \n  if(dragging) {\n    raycaster.setFromCamera( mouse, camera.camera );\n    let intersect = raycaster.intersectObject( plane )[0];  \n    if(intersect){\n      dragging.pos.copy(intersect.point);\n      plane.position.copy(intersect.point);\n      plane.lookAt(camera.position);    \n      dragging.pinned = simpleStore.pinNodeEnabled;\n    }\n  }\n}\n\ndocument.addEventListener( 'mousedown', onMouseDown, false );\ndocument.addEventListener( 'mousemove', onMouseMove, false );\ndocument.addEventListener( 'mouseup', onMouseUp, false );\n\ndocument.addEventListener( 'dblclick', onMouseDblClick, false );\n\ndocument.addEventListener( 'touchstart', event => onMouseDown(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchmove', event => onMouseMove(event.changedTouches[0]), false );\ndocument.addEventListener( 'touchend', event => onMouseUp(event.changedTouches[0]), false ); \n\nlet lastHoveredNode = null;\nfunction animate() {\n  requestAnimationFrame( animate );\n\n  if(mouseMove) {\n    if(lastHoveredNode) {\n      removeHoverCircle(lastHoveredNode);\n      lastHoveredNode = null;\n    }\n    if(graph) {\n      everyRaycastIntersect(mouseMove, graph => {\n        addHoverCircle(graph);\n        lastHoveredNode = graph;\n      } );\n    }\n  }\n\n  if(graph) {\n    forceDirected(graph, {ignore: dragging});\n    removeLinesFromScene();\n    everyNode(graph, updatePosition);                \n    everyEdge(graph, addLineToScene);\n    for(let circle of circles) {\n      circle.lookAt(camera.position);\n    }  \n  }\n\n  camera.update();\n}\n\nlet saveGraph = (branches, generations) => {\n  localStorage.setItem('graph', JSON.stringify( {root: graph[0].data, branches, generations} ));\n}\n\nexport {addGraph,removeGraph,changeGraph, saveGraph}\nexport default init","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass Camera {\n    constructor({renderer, scene}) {\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.z = 1000;\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );  \n        this.controls.target = new THREE.Vector3(0, 0, 0);\n        this.controls.maxDistance = 5000;\n        \n        let onResize = () => {\n            this.camera.aspect = window.innerWidth / window.innerHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n          \n        window.addEventListener( 'resize', onResize, false );         \n    }\n\n    get position() {return this.camera.position;}\n    update() {\n        this.controls.update();\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nexport default Camera","import * as THREE from 'three';\n\nlet sbVertexShader = [\n    \"varying vec3 vWorldPosition;\",\n    \"void main() {\",\n    \"  vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n    \"  vWorldPosition = worldPosition.xyz;\",\n    \"  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\",\n    ].join(\"\\n\");\n\nlet sbFragmentShader = [\n    \"uniform vec3 topColor;\",\n    \"uniform vec3 bottomColor;\",\n    \"uniform float offset;\",\n    \"uniform float exponent;\",\n    \"varying vec3 vWorldPosition;\",\n    \"void main() {\",\n    \"  float h = normalize( vWorldPosition + offset ).y;\",\n    \"  gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( h, exponent ), 0.0 ) ), 1.0 );\",\n    \"}\",\n    ].join(\"\\n\");\n\nlet skyMesh = () => {\n        let iSBrsize = 5000;\n        let uniforms = {\n          topColor: {type: \"c\", value: new THREE.Color(0x0077ff)}, bottomColor: {type: \"c\", value: new THREE.Color(0xffffff)},\n          offset: {type: \"f\", value: iSBrsize}, exponent: {type: \"f\", value: 1.5}\n        }\n        let skyGeo = new THREE.SphereGeometry(iSBrsize, 32, 32);\n        let skyMat = new THREE.ShaderMaterial({vertexShader: sbVertexShader, fragmentShader: sbFragmentShader, uniforms: uniforms, side: THREE.DoubleSide, fog: false});\n        return new THREE.Mesh(skyGeo, skyMat);        \n    }\n\nexport default skyMesh;","import React, {Component} from 'react';\nimport M from \"materialize-css\";\nimport './Menu.css';\n\nclass Menu extends Component {\n  componentDidMount() {\n    // Auto initialize all the things!\n    M.AutoInit();\n  }\n\n  reloadPage = () => window.location.reload()\n\n  render() {\n    return (\n    <div className=\"Menu\">\n      <ul id=\"slide-out\" className=\"sidenav\">\n        <li><a onClick={this.reloadPage}>Reload Page</a></li>\n        <li className=\"no-padding\">\n        </li>\n      </ul>\n      <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>      \n    </div>\n    )}\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './HelpButton.css'\n\nlet HelpButton = () => {\n    return (\n        <div>\n        <div className='center-camera-button'>\n            <a data-target=\"modal1\" className=\"btn modal-trigger btn-floating btn-large waves-effect waves-light black\"><i className=\"material-icons\">help_outline</i></a>\n        </div>\n        <div id=\"modal1\" class=\"modal\">\n            <div class=\"modal-content\">\n            <h4>Force Graph Three Experiment</h4>\n            <p>This is a force directed tree graph made with three.js.</p>\n            <p>Opposing forces push nodes away from each other while spring forces hold the structure of the tree in place.</p>\n            <p>You can adjust the number of generations the tree has and the number of branches each node creates in a generation.</p>\n            <p>Try dragging the nodes around. Use the pin switch to choose whether or not to fix the node to a location or release it to the graph forces.</p>\n            <p>I hope you enjoy this experiment. Thanks, Michael Deitcher</p>\n            </div>\n        </div>   \n      </div>\n    );\n}\n\nexport default HelpButton;","import React, {Component} from 'react';\nimport simpleStore from '../simpleStore';\nimport './PinNodeToggle.css'\n\nclass PinNodeToggle extends Component {\n    constructor(props) {\n        super(props);\n        simpleStore.pinNodeEnabled = this.state = {checked: simpleStore.pinNodeEnabled || true};\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        simpleStore.pinNodeEnabled = event.target.checked;\n        this.setState({checked: event.target.checked});\n    }\n\n    render() {\n        return (\n            <div className=\"switch\">\n                <div className='label-title'>Pin</div>      \n                <label>\n                    Off\n                    <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                    <span className=\"lever\"></span>\n                    On\n                </label>\n            </div>        \n        )\n    };\n}\n\nexport default PinNodeToggle;","import React, {useState, useEffect} from 'react';\nimport './BaseNumber.css'\n\nlet BaseNumber = ({value, handleValueChange, className, numberType}) => {\n    return (\n        <div className = {className}>        \n            <div className='number-type'>{numberType}</div>        \n            <a className=\"btn-floating btn-small\" onClick={() => handleValueChange(value - 1)}><i className=\"material-icons\">keyboard_arrow_down</i></a>\n            <span>{value}</span>\n            <a className=\"btn-floating btn-small\" onClick={() => handleValueChange(value + 1)}><i className=\"material-icons\">keyboard_arrow_up</i></a>\n        </div>\n    );\n}\n\nexport default BaseNumber;","export default {\"root\":{\"id\":0,\"pos\":[-3.3339496920774936,-465.6416403268274,142.60880144967007],\"pinned\":{\"checked\":true},\"enabled\":true,\"children\":[{\"id\":57,\"pos\":[-110.15849291574895,-356.5074676503415,201.6156517907385],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":58,\"pos\":[-165.29334342265594,-278.42974472685006,65.01578093534434],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":59,\"pos\":[-134.0259964200935,-316.3878481072423,-30.318820633582902],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":60,\"pos\":[-82.38958115657621,-283.85606132378274,-87.1819573287545],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":64,\"pos\":[-167.0321637018331,-374.61258453468923,-77.03731103412714],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3},{\"id\":63,\"pos\":[-237.92900524289877,-182.66967130111854,22.36138192614023],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":65,\"pos\":[-318.8360860846732,-171.07846181319215,14.634122986224305],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":66,\"pos\":[-231.34771469607062,-107.21657324433167,-18.013685672166957],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3}],\"depth\":2},{\"id\":62,\"pos\":[-135.1260464535008,-348.0478982352455,358.35567142862385],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":67,\"pos\":[-97.38917360197772,-287.5898621038949,471.8981979160769],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":69,\"pos\":[-65.88748231110242,-318.761973459337,543.3696745606289],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":70,\"pos\":[-97.96274656827983,-215.6214051279871,519.8496451744126],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3},{\"id\":68,\"pos\":[-200.7095173735019,-416.85969332668674,406.7802745681485],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":71,\"pos\":[-185.02228607927754,-496.5932159191239,413.45685631599684],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":72,\"pos\":[-272.28985910084174,-416.41198519774963,447.8762984535906],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3}],\"depth\":2}],\"depth\":1},{\"id\":61,\"pos\":[105.70581138388603,-224.99876714433,222.7770745926898],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":73,\"pos\":[244.14582265052232,-276.77902922178714,251.7199893278192],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":75,\"pos\":[285.684948041876,-359.27861548682654,196.0305635281887],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":77,\"pos\":[295.51026374037605,-435.64075504937364,225.04201621583536],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":78,\"pos\":[329.92758581458975,-367.7124449046532,127.17818828246203],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3},{\"id\":76,\"pos\":[337.04147096410816,-244.34125607231732,323.36625163680395],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":79,\"pos\":[402.13027522683905,-193.00377378769562,314.01859197806425],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":80,\"pos\":[368.24865653733417,-265.17331862007256,398.796916361632],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3}],\"depth\":2},{\"id\":74,\"pos\":[80.6735129709928,-19.403905105040344,257.3947925445619],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":81,\"pos\":[22.82491193219214,75.59485699215941,197.01450179523516],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":83,\"pos\":[-49.93042453645373,117.3236368911668,210.94840716252332],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":84,\"pos\":[38.14677864554075,143.5920416721583,144.8230387406737],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3},{\"id\":82,\"pos\":[99.63172879706917,88.10992387564028,340.1992202581722],\"pinned\":false,\"enabled\":true,\"children\":[{\"id\":85,\"pos\":[156.394936416216,149.58903579700024,345.94353771652806],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4},{\"id\":86,\"pos\":[62.83051989735797,134.6748812972971,404.5001462964334],\"pinned\":false,\"enabled\":true,\"children\":[],\"depth\":4}],\"depth\":3}],\"depth\":2}],\"depth\":1}],\"depth\":0},\"branches\":2,\"generations\":4}","import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.css';\nimport {addGraph,changeGraph,saveGraph} from '../MainScene';\nimport { treeGraph } from '../treeGraph.js'\nimport Menu from './Menu'\nimport HelpButton from './HelpButton'\nimport PinNodeToggle from './PinNodeToggle'\nimport BaseNumber from './BaseNumber'\nimport defaultTreeData from '../treeGraphData.js'\n\nconst maxNodes = 500;\n\nfunction App() {\n  const [baseNumber, setBaseNumber] = useState(1);\n  const [powerNumber, setPowerNumber] = useState(1);\n\n  useEffect( () => {\n    let data = JSON.parse(localStorage.getItem('graph'));\n    let graph;\n    if(!data){\n      data = defaultTreeData;\n    }\n    if(data){\n      graph = treeGraph(0,0);\n      let addedNodes = graph[0].loadData(data.root);\n      graph = graph.concat(addedNodes);\n      setBaseNumber(data.branches);\n      setPowerNumber(data.generations);\n    } else {\n      graph = treeGraph(powerNumber,baseNumber);    \n    }\n    addGraph(graph);\n  }, []);\n\n  const updateGraph = (base, power) => {\n    changeGraph(base,power);\n  }\n\n  const handleBaseNumber = (value) => {\n    if(Math.pow(value, powerNumber) > maxNodes){\n      setBaseNumber(baseNumber);\n      return;\n    }\n    setBaseNumber(value);\n    updateGraph(value, powerNumber);\n  }\n\n  const handlePowerNumber = (value) => {\n    if(Math.pow(baseNumber, value) > maxNodes){\n      setPowerNumber(powerNumber);\n      return;\n    }    \n    setPowerNumber(value);\n    updateGraph(baseNumber, value);\n  }  \n\n  const createNewGraph = () => {\n    \n  }\n  \n  return (\n    <div className=\"App\">\n      <Menu/>\n      <HelpButton handleClick={() => saveGraph(baseNumber,powerNumber)}/>\n      {/* <SaveButton handleClick={() => saveGraph(baseNumber,powerNumber)}/> */}\n      <div className='bottom-fixed'>\n        <PinNodeToggle/>      \n        <BaseNumber numberType='Branches' className='base-number' value={baseNumber} handleValueChange={handleBaseNumber}/>\n        <BaseNumber numberType='Generations' className='power-number' value={powerNumber} handleValueChange={handlePowerNumber}/>\n      </div>           \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport MainScene from './MainScene';\n// import App from './draw/App';\n// import MainScene from './draw/MainScene';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nMainScene();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}